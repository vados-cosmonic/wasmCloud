name: secrets-nats-kv

on:
  push:
    branches: [main]
  merge_group:
  pull_request:
    branches: [main]
    paths:
      - .github/workflows/secrets-nats-kv.yml
      - Cargo.lock
      - Cargo.toml
      - crates/secrets-nats-kv/**
      - crates/secrets-client/**
      - crates/secrets-types/**

permissions:
  contents: read

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  CARGO_TERM_COLOR: always

jobs:
  integration_tests:
    name: Integration Tests
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@eef61447b9ff4aafe5dcd4e0bbf5d482be7e7871
      - run: rustup show
      - uses: Swatinem/rust-cache@82a92a6e8fbeee089604da2575dc567ae9ddeaab
        with:
          shared-key: "ubuntu-22.04-shared-cache"
      - name: Launch integration test services
        uses: sudo-bot/action-docker-compose@ef4c4da08a9673f93d4eb8a5da1e942bf24a37ea
        with:
          cli-args: "-f ./crates/secrets-nats-kv/tools/docker-compose.yml up --detach"
      - name: Install nextest
        uses: taiki-e/install-action@bb30b77c17b9642b9e613dc93e01b970619869f8
        with:
          tool: nextest
      - name: Run integration tests
        run: make test-integration-ci
        working-directory: ./crates/secrets-nats-kv

  release-build:
    if: ${{ startsWith(github.ref, 'refs/tags/secrets-nats-kv-v') }}
    runs-on: ${{ matrix.build.runs-on }}
    permissions:
      contents: write
    strategy:
      matrix:
        build:
          - os: linux
            arch: amd64
            libc: gnu
            runs-on: ubuntu-22.04
            rust-target: x86_64-unknown-linux-gnu
          - os: linux
            arch: amd64
            libc: musl
            runs-on: ubuntu-22.04
            rust-target: x86_64-unknown-linux-musl
          - os: darwin
            arch: amd64
            runs-on: macos-13
            rust-target: x86_64-apple-darwin
          - os: darwin
            arch: aarch64
            runs-on: macos-14
            rust-target: aarch64-apple-darwin
          - os: windows
            arch: amd64
            libc: msvc
            runs-on: windows-2022
            rust-target: x86_64-pc-windows-msvc
    steps:
      - uses: actions/checkout@eef61447b9ff4aafe5dcd4e0bbf5d482be7e7871
      - run: rustup target add ${{ matrix.build.rust-target }}
      - uses: Swatinem/rust-cache@82a92a6e8fbeee089604da2575dc567ae9ddeaab
        with:
          shared-key: "ubuntu-22.04-shared-cache"

      - name: Extract tag context
        id: ctx
        shell: bash
        run: |
          sha_short=$(git rev-parse --short HEAD)
          echo "sha_short=${sha_short}" >> "$GITHUB_OUTPUT"

          version=$(cargo metadata --manifest-path "./crates/secrets-nats-kv/Cargo.toml" --no-deps --format-version 1 | jq -r '.packages[] | select(.name == "wasmcloud-nats-kv-secrets") | .version')
          echo "untagged version is ${version}"
          echo "untagged version ${version} is a pre-release"
          echo "version=${version}" >> "$GITHUB_OUTPUT"
          if [[ $version == *"-"* ]]; then
            echo "tagged version ${version} is a pre-release"
            echo "prerelease=true" >> "$GITHUB_OUTPUT"
          fi

      - name: Install musl toolchain
        if: ${{ matrix.build.libc == 'musl' }}
        run: |
          sudo apt-get install -y musl musl-tools

      - name: Build
        run: |
          cargo build --release -p secrets-nats-kv --target ${{ matrix.build.rust-target }}

      - name: Determine binary name
        id: bin-name
        shell: bash
        run: |
          if [ "" == "${{ matrix.build.libc }}" ]; then
            export BIN_NAME=secrets-nats-kv-${{ matrix.build.arch }}-${{ matrix.build.os }};
          else
            export BIN_NAME=secrets-nats-kv-${{ matrix.build.arch }}-${{ matrix.build.os }}-${{ matrix.build.libc }};
          fi
          echo "bin-name=$BIN_NAME" >> $GITHUB_OUTPUT;

      - name: Basic binary test
        run: |
          ./target/${{ matrix.build.rust-target}}/release/secrets-nats-kv --version

      - name: Copy binary
        shell: bash
        run: |
          mkdir artifacts;
          cp ./target/${{ matrix.build.rust-target}}/release/secrets-nats-kv artifacts/${{ steps.bin-name.outputs.bin-name }}

      - uses: actions/upload-artifact@b4b15b8c7c6ac21ea08fcf65892d2ee8f75cf882
        with:
          name: ${{ steps.bin-name.outputs.bin-name }}
          path:
            artifacts/*

  release:
    if: ${{ startsWith(github.ref, 'refs/tags/secrets-nats-kv-v') }}
    needs: [ release-build ]
    runs-on: ubuntu-22.04
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@eef61447b9ff4aafe5dcd4e0bbf5d482be7e7871

      - name: Extract tag context
        id: ctx
        shell: bash
        run: |
          sha_short=$(git rev-parse --short HEAD)
          echo "sha_short=${sha_short}" >> "$GITHUB_OUTPUT"

          version=$(cargo metadata --manifest-path "./crates/secrets-nats-kv/Cargo.toml" --no-deps --format-version 1 | jq -r '.packages[] | select(.name == "wasmcloud-nats-kv-secrets") | .version')
          echo "untagged version is ${version}"
          echo "untagged version ${version} is a pre-release"
          echo "version=${version}" >> "$GITHUB_OUTPUT"
          if [[ $version == *"-"* ]]; then
            echo "tagged version ${version} is a pre-release"
            echo "prerelease=true" >> "$GITHUB_OUTPUT"
          fi

      - uses: actions/download-artifact@fa0a91b85d4f404e444e00e005971372dc801d16
        with:
          pattern: secrets-nats-kv-*
          merge-multiple: true
          path: artifacts

      - name: Add musl as default linux binary
        run: |
          cp artifacts/secrets-nats-kv-amd64-linux-musl artifacts/secrets-nats-kv-amd64-linux

      - name: Release
        uses: softprops/action-gh-release@c062e08bd532815e2082a85e87e3ef29c3e6d191
        with:
          draft: true
          prerelease: ${{ steps.ctx.outputs.prerelease != '' }}
          generate_release_notes: true
          files: |
            ./artifacts/*
