name: wasmCloud

on:
  pull_request:
  merge_group:
  push:
    branches:
    - main
    tags:
    - 'actor-v[0-9].[0-9]+.[0-9]+'
    - 'actor-v[0-9].[0-9]+.[0-9]+-*'
    - 'compat-v[0-9].[0-9]+.[0-9]+'
    - 'compat-v[0-9].[0-9]+.[0-9]+-*'
    - 'control-interface-v[0-9].[0-9]+.[0-9]+'
    - 'control-interface-v[0-9].[0-9]+.[0-9]+-*'
    - 'core-v[0-9].[0-9]+.[0-9]+'
    - 'core-v[0-9].[0-9]+.[0-9]+-*'
    - 'host-sys-v[0-9].[0-9]+.[0-9]+'
    - 'host-sys-v[0-9].[0-9]+.[0-9]+-*'
    - 'host-v[0-9].[0-9]+.[0-9]+'
    - 'host-v[0-9].[0-9]+.[0-9]+-*'
    - 'opentelemetry-nats-v[0-9].[0-9]+.[0-9]+'
    - 'opentelemetry-nats-v[0-9].[0-9]+.[0-9]+-*'
    - 'provider-archive-v[0-9].[0-9]+.[0-9]+'
    - 'provider-archive-v[0-9].[0-9]+.[0-9]+-*'
    - 'provider-sdk-v[0-9].[0-9]+.[0-9]+'
    - 'provider-sdk-v[0-9].[0-9]+.[0-9]+-*'
    - 'provider-wit-bindgen-v[0-9].[0-9]+.[0-9]+'
    - 'provider-wit-bindgen-v[0-9].[0-9]+.[0-9]+-*'
    - 'runtime-v[0-9].[0-9]+.[0-9]+'
    - 'runtime-v[0-9].[0-9]+.[0-9]+-*'
    - 'tracing-v[0-9].[0-9]+.[0-9]+'
    - 'tracing-v[0-9].[0-9]+.[0-9]+-*'
    - 'v[0-9].[0-9]+.[0-9]+'
    - 'v[0-9].[0-9]+.[0-9]+-*'
    - 'wascap-v[0-9].[0-9]+.[0-9]+'
    - 'wascap-v[0-9].[0-9]+.[0-9]+-*'
    - 'wash-cli-v[0-9].[0-9]+.[0-9]+'
    - 'wash-cli-v[0-9].[0-9]+.[0-9]+-*'
    - 'wash-lib-v[0-9].[0-9]+.[0-9]+'
    - 'wash-lib-v[0-9].[0-9]+.[0-9]+-*'
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build-bin:
    name: wasmcloud-${{ matrix.config.target }}
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        config:
        - target: x86_64-unknown-linux-musl
          test-bin: |
            ./result/bin/wash --version
            ./result/bin/wasmcloud --version
          test-oci: |
            docker load < ./result
            docker run --rm wasmcloud:$(nix eval --raw .#wasmcloud-x86_64-unknown-linux-musl-oci.imageTag) wash --version
            docker run --rm wasmcloud:$(nix eval --raw .#wasmcloud-x86_64-unknown-linux-musl-oci.imageTag) wasmcloud --version
    steps:
    - uses: actions/checkout@v4.1.1
    - uses: ./.github/actions/install-nix
      with:
        cachixAuthToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'
    - uses: ./.github/actions/build-nix
      with:
        package: wasmcloud-${{ matrix.config.target }}
    - run: ${{ matrix.config.test-bin }}
    - uses: ./.github/actions/build-nix
      with:
        package: wasmcloud-${{ matrix.config.target }}-oci
      if: ${{ !endsWith(matrix.config.target, 'fhs') }}
    - run: ${{ matrix.config.test-oci }}
      if: ${{ !endsWith(matrix.config.target, 'fhs') }}

  cargo:
    strategy:
      matrix:
        check:
        - audit
        - fmt
        - clippy
        - nextest

    name: cargo ${{ matrix.check }}
    runs-on: ubuntu-22.04
    steps:
    - uses: actions/checkout@v4.1.1
    - uses: ./.github/actions/install-nix
      with:
        cachixAuthToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'
    - run: nix build -L .#checks.x86_64-linux.${{ matrix.check }}
